{
	"info": {
		"_postman_id": "b1844c94-e455-4b78-b5b4-ee2f5d5430ff",
		"name": "Role and User Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16671147"
	},
	"item": [
		{
			"name": "Create Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"lastRole\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomUserName}}\",\n    \"clearanceLevel\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Endpoint}}/role/",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"role",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all roles",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Endpoint}}/role/",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"role",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"let json = pm.response.json();",
							"let lastRole = pm.environment.get(\"lastRole\")",
							"pm.test(\"Verify that response contains expected role\", function() {",
							"    pm.expect(json.roles[0].id.toString()).eq(lastRole);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"lastUser\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"roles\": [\n        {{lastRole}}\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Endpoint}}/user/",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get last created user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"let json = pm.response.json();",
							"let lastRole = pm.environment.get(\"lastRole\")",
							"pm.test(\"Verify that response contains expected role\", function() {",
							"    pm.expect(json.roles[0].id.toString()).eq(lastRole);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Endpoint}}/user/{{lastUser}}",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"user",
						"{{lastUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update last created user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify user fields are updated\", function() {",
							"    let json = pm.response.json();",
							"    pm.expect(json.name).to.eq(\"Nuevo nombre\");",
							"    pm.expect(json.email).to.eq(\"micorreo@gmail.com\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Nuevo nombre\",\n    \"email\": \"micorreo@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Endpoint}}/user/{{lastUser}}",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"user",
						"{{lastUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all registered users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify that response contains at least one element\", function() {",
							"    let json = pm.response.json();",
							"    pm.expect(json.values.length).to.above(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Endpoint}}/user/?limit=5&offset=0",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"user",
						""
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete last created user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Endpoint}}/user/{{lastUser}}",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"user",
						"{{lastUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete last created role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is successful with a status code of 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Endpoint}}/role/{{lastRole}}",
					"host": [
						"{{Endpoint}}"
					],
					"path": [
						"role",
						"{{lastRole}}"
					]
				}
			},
			"response": []
		}
	]
}